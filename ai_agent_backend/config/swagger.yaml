openapi: 3.0.0
info:
  title: AI Agent Backend API
  description: API for interacting with the AI Agent Backend system
  version: 1.0.0
servers:
  - url: https://backengine-hgd2mg58.fly.dev
paths:
  /auth/login:
    post:
      summary: User login
      description: Authenticate a user and return a token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized
  /api/records:
    get:
      summary: Retrieve Toowireds records
      description: Get a paginated list of records from the Toowireds table
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: size
          schema:
            type: integer
            default: 15
          description: Number of records per page
      responses:
        '200':
          description: Successful response
          content:
            application/json:    
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      $ref: '#/components/schemas/Record'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /api/tasks:
    post:
      summary: Submit a new task to the AI system
      description: Create a new task for the AI agents to process
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /api/tasks/{taskId}:
    get:
      summary: Get task status and results
      description: Retrieve the current status and results of a specific task
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
        '500':
          description: Internal server error

components:
  schemas:
    Record:
      type: object
      properties:
        id:
          type: string
        # Add other properties based on your Toowireds schema
      # Add required fields as necessary
    PaginationMeta:
      type: object
      properties:
        page:
          type: integer
        perPage:
          type: integer
        totalPages:
          type: integer
        totalRecords:
          type: integer
    TaskInput:
      type: object
      properties:
        type:
          type: string
          enum: [research, analysis, prediction, decision]
        description:
          type: string
        parameters:
          type: object
          # Add specific parameters based on task types
      required:
        - type
        - description
    Task:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [pending, in_progress, completed, failed]
        result:
          type: object
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - type
        - description
        - status
        - createdAt
        - updatedAt

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT